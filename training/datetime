Last login: Tue Mar 14 22:36:53 on ttys000
(base) ramaialejandria@Ramais-iMac ~ % jshell
|  Welcome to JShell -- Version 17.0.2
|  For an introduction type: /help intro

jshell> import java.time.*

jshell> LocalDate.now()
$2 ==> 2023-03-15

jshell> LocalTime.now()
$3 ==> 09:39:23.637057

jshell> LocalDate date1 = LocalDate.of(2023,Month.MARCH,15)
date1 ==> 2023-03-15

jshell> LocalDate date2 = LocalDate.of(2023,3,15)
date2 ==> 2023-03-15

jshell> LocalTime time1 = LocalTime.of(6,15)
time1 ==> 06:15

jshell> LocalTime time2 = LocalTimeof(6,15,30)
|  Error:
|  cannot find symbol
|    symbol:   method LocalTimeof(int,int,int)
|  LocalTime time2 = LocalTimeof(6,15,30);
|                    ^---------^

jshell> LocalTime time2 = LocalTime.of(6,15,30)
time2 ==> 06:15:30

jshell> LocalTime time3 = LocalTime.of(6,15,30,200)
time3 ==> 06:15:30.000000200

jshell> LocalDateTime dateTime1 = LocalDateTime.of(2023,Month.MARCH,9,54,30,42)
|  Exception java.time.DateTimeException: Invalid value for HourOfDay (valid values 0 - 23): 54
|        at ValueRange.checkValidValue (ValueRange.java:319)
|        at ChronoField.checkValidValue (ChronoField.java:718)
|        at LocalTime.of (LocalTime.java:319)
|        at LocalDateTime.of (LocalDateTime.java:264)
|        at (#9:1)

jshell> LocalDateTime dateTime1 = LocalDateTime.of(2023,Month.MARCH,54,30,42)
|  Exception java.time.DateTimeException: Invalid value for DayOfMonth (valid values 1 - 28/31): 54
|        at ValueRange.checkValidValue (ValueRange.java:319)
|        at ChronoField.checkValidValue (ChronoField.java:718)
|        at LocalDate.of (LocalDate.java:252)
|        at LocalDateTime.of (LocalDateTime.java:238)
|        at (#10:1)

jshell> LocalDateTime dateTime1 = LocalDateTime.of(2023,Month.MARCH,15,9,30,42)
dateTime1 ==> 2023-03-15T09:30:42

jshell> LocalDateTime dateTime2 = LocalDateTime.of(date1,time1)
dateTime2 ==> 2023-03-15T06:15

jshell> LocalDate d = new LocalDate()
|  Error:
|  constructor LocalDate in class java.time.LocalDate cannot be applied to given types;
|    required: int,int,int
|    found:    no arguments
|    reason: actual and formal argument lists differ in length
|  LocalDate d = new LocalDate();
|                ^-------------^

jshell> LocalDate.of(2015,Month.JANUARY,32)
|  Exception java.time.DateTimeException: Invalid value for DayOfMonth (valid values 1 - 28/31): 32
|        at ValueRange.checkValidValue (ValueRange.java:319)
|        at ChronoField.checkValidValue (ChronoField.java:718)
|        at LocalDate.of (LocalDate.java:252)
|        at (#13:1)

jshell> LocalDate.of(2018,Month.FEBRUARY,29)
|  Exception java.time.DateTimeException: Invalid date 'February 29' as '2018' is not a leap year
|        at LocalDate.create (LocalDate.java:459)
|        at LocalDate.of (LocalDate.java:253)
|        at (#14:1)

jshell> LocalDate.of(2020,Month.FEBRUARY,29)
$15 ==> 2020-02-29

jshell> LocalDate date = LocalDate.of(1996,Month.SEPTEMBER,4)
date ==> 1996-09-04

jshell> date
date ==> 1996-09-04

jshell> date.plusDays(2)
$18 ==> 1996-09-06

jshell> date.plusWeeks(1)
$19 ==> 1996-09-11

jshell> date
date ==> 1996-09-04

jshell> date = date.plusDays(2)
date ==> 1996-09-06

jshell> date = date.plusWeeks(1)
date ==> 1996-09-13

jshell> date = date.plusMonths(1)
date ==> 1996-10-13

jshell> date = date.plusYears(3)
date ==> 1999-10-13

jshell> date = date.plusMonths(1)
date ==> 1999-11-13

jshell> date = date.plusDays(6)
date ==> 1999-11-19

jshell> date = date.minusYears(3)
date ==> 1996-11-19

jshell> date = date.minusMonths(2).minusWeeks(1).minusDays(1)
date ==> 1996-09-11

jshell> date
date ==> 1996-09-11

jshell> date = date.minusWeeks(1)
date ==> 1996-09-04

jshell> date
date ==> 1996-09-04

jshell> time
|  Error:
|  cannot find symbol
|    symbol:   variable time
|  time
|  ^--^

jshell> LocalTime time = LocalTime.of(10,38)
time ==> 10:38

jshell> time.plusHours(4)
$33 ==> 14:38

jshell> time = time.plusHours(4).plusMinutes(14)
time ==> 14:52

jshell> time
time ==> 14:52

jshell> time
time ==> 14:52

jshell> dateTime
|  Error:
|  cannot find symbol
|    symbol:   variable dateTime
|  dateTime
|  ^------^

jshell> LocalDateTime dateTime = LocalDateTime.now()
dateTime ==> 2023-03-15T10:40:59.994777

jshell> dateTime = dateTime.plusHours(5)
dateTime ==> 2023-03-15T15:40:59.994777

jshell> dateTime = dateTime.plusHours(9)
dateTime ==> 2023-03-16T00:40:59.994777

jshell> date
date ==> 1996-09-04

jshell> date = date.plusMinutes(23)
|  Error:
|  cannot find symbol
|    symbol:   method plusMinutes(int)
|  date = date.plusMinutes(23)
|         ^--------------^

jshell> date = date.plusDays(1)
date ==> 1996-09-05

jshell> date = date.minusDays(1)
date ==> 1996-09-04

jshell> 4 + 4
   ...>
$43 ==> 8

jshell> LocalDate.toEpochDay()
|  Error:
|  non-static method toEpochDay() cannot be referenced from a static context
|  LocalDate.toEpochDay()
|  ^------------------^

jshell> date.toEpochDay()
$44 ==> 9743

jshell> Period annually = Period.ofYears(1)
annually ==> P1Y

jshell> Period monthy = Period.ofMonths(3)
monthy ==> P3M

jshell> Period weekly = Period.ofWeeks(3)
weekly ==> P21D

jshell> Period everyYearAndAWeek = Period.of(1,0,7)
everyYearAndAWeek ==> P1Y7D

jshell> date
date ==> 1996-09-04

jshell> time
time ==> 14:52

jshell> dateTime
dateTime ==> 2023-03-16T00:40:59.994777

jshell> Period year = Period.ofYears(26)
year ==> P26Y

jshell> Period month = Period.ofMonths(6)
month ==> P6M

jshell> Period day = Period.ofDays(12)
day ==> P12D

jshell> date
date ==> 1996-09-04

jshell> date = date.plus(year)
date ==> 2022-09-04

jshell> date = date.plus(month)
date ==> 2023-03-04

jshell> date = date.plus(day)
date ==> 2023-03-16

jshell> date
date ==> 2023-03-16

jshell> dateTime
dateTime ==> 2023-03-16T00:40:59.994777

jshell> dateTime.plus(year)
$61 ==> 2049-03-16T00:40:59.994777

jshell> time
time ==> 14:52

jshell> time.plus(year)
|  Exception java.time.temporal.UnsupportedTemporalTypeException: Unsupported unit: Years
|        at LocalTime.plus (LocalTime.java:1078)
|        at LocalTime.plus (LocalTime.java:125)
|        at Period.addTo (Period.java:900)
|        at LocalTime.plus (LocalTime.java:1011)
|        at (#63:1)

jshell> date
date ==> 2023-03-16

jshell> LocalDateTime ramaiBirthData = LocalDateTime.of(1996,9,4,23,12,30)
ramaiBirthData ==> 1996-09-04T23:12:30

jshell> ramaiBirthData.getMonth()
$66 ==> SEPTEMBER

jshell> ramaiBirthData.getYear()
$67 ==> 1996

jshell> ramaiBirthData.getDayOfWeek()
$68 ==> WEDNESDAY

jshell> date.getDayOfYear()
$69 ==> 75

jshell> ramaiBirthData.getDay()
|  Error:
|  cannot find symbol
|    symbol:   method getDay()
|  ramaiBirthData.getDay()
|  ^-------------------^

jshell> ramaiBirthData.getDate()
|  Error:
|  cannot find symbol
|    symbol:   method getDate()
|  ramaiBirthData.getDate()
|  ^--------------------^

jshell> ramaiBirthData.getMonth()
$70 ==> SEPTEMBER

jshell> import java.time.format
|  Error:
|  cannot find symbol
|    symbol:   class format
|  import java.time.format;
|         ^--------------^

jshell> import java.time.format.*

jshell> LocalDate date = LocalDate.of(2022,Month.MAY,16)
date ==> 2022-05-16

jshell> LocalTime time = LocalTime.of(9,45,32)
time ==> 09:45:32

jshell> LocalDateTime dateTime = LocalDateTime.of(date,time)
dateTime ==> 2022-05-16T09:45:32

jshell> date.format(DateTimeFormatter.ISO_LOCAL_DATE)
$75 ==> "2022-05-16"

jshell> time.format(DateTimeFormatter.ISO_LOCAL_TIME)
$76 ==> "09:45:32"

jshell> dateTime.format(DateTimeFormatter.IS_LOCAL_DATE_TIME)
|  Error:
|  cannot find symbol
|    symbol:   variable IS_LOCAL_DATE_TIME
|  dateTime.format(DateTimeFormatter.IS_LOCAL_DATE_TIME)
|                  ^----------------------------------^

jshell> dateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)
$77 ==> "2022-05-16T09:45:32"

jshell> DateTimeFormatter shortDateTime = DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT)
shortDateTime ==> Localized(SHORT,)

jshell> shortDateTime.formate(date)
|  Error:
|  cannot find symbol
|    symbol:   method formate(java.time.LocalDate)
|  shortDateTime.formate(date)
|  ^-------------------^

jshell> shortDateTime.format(date)
$79 ==> "5/16/22"

jshell> shortDateTime.format(dateTime)
$80 ==> "5/16/22"

jshell> shortDateTime.format(time)
|  Exception java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: MonthOfYear
|        at LocalTime.get0 (LocalTime.java:703)
|        at LocalTime.getLong (LocalTime.java:680)
|        at DateTimePrintContext$1.getLong (DateTimePrintContext.java:205)
|        at DateTimePrintContext.getValue (DateTimePrintContext.java:308)
|        at DateTimeFormatterBuilder$NumberPrinterParser.format (DateTimeFormatterBuilder.java:2763)
|        at DateTimeFormatterBuilder$CompositePrinterParser.format (DateTimeFormatterBuilder.java:2402)
|        at DateTimeFormatterBuilder$LocalizedPrinterParser.format (DateTimeFormatterBuilder.java:4844)
|        at DateTimeFormatterBuilder$CompositePrinterParser.format (DateTimeFormatterBuilder.java:2402)
|        at DateTimeFormatter.formatTo (DateTimeFormatter.java:1849)
|        at DateTimeFormatter.format (DateTimeFormatter.java:1823)
|        at (#81:1)

jshell> LocalDate date = LocalDate.of(2023,Month.MARCH,15)
date ==> 2023-03-15

jshell> LocalTime time = LocalTime.now()
time ==> 11:48:08.384270

jshell> time = LocalTime.of(11,49,00)
time ==> 11:49

jshell> DateTimeFormatter shortF = DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)
shortF ==> Localized(SHORT,SHORT)

jshell> DateTimeFormatter mediumF = DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)
mediumF ==> Localized(MEDIUM,MEDIUM)

jshell> LocalDateTime dateTime = LocalDateTime.of(date,time)
dateTime ==> 2023-03-15T11:49

jshell> shortF.format(dateTime)
$88 ==> "3/15/23, 11:49 AM"

jshell> mediumF.format(dateTime)
$89 ==> "Mar 15, 2023, 11:49:00 AM"

jshell> DateTimeFormatter f = DateTimeFormatter.ofPattern("MMMM dd, yyyy, hh:mm")
f ==> Text(MonthOfYear)' 'Value(DayOfMonth,2)','' 'Valu ... 2)':'Value(MinuteOfHour,2)

jshell> dateTime.format(f)
$91 ==> "March 15, 2023, 11:49"

jshell> DateTimeFormatter k = DateTimeFormatter.ofPattern("hh:mm")
k ==> Value(ClockHourOfAmPm,2)':'Value(MinuteOfHour,2)

jshell> k.format(dateTime)
$93 ==> "11:49"

jshell> f.format(date)
|  Exception java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: ClockHourOfAmPm
|        at LocalDate.get0 (LocalDate.java:709)
|        at LocalDate.getLong (LocalDate.java:688)
|        at DateTimePrintContext.getValue (DateTimePrintContext.java:308)
|        at DateTimeFormatterBuilder$NumberPrinterParser.format (DateTimeFormatterBuilder.java:2763)
|        at DateTimeFormatterBuilder$CompositePrinterParser.format (DateTimeFormatterBuilder.java:2402)
|        at DateTimeFormatter.formatTo (DateTimeFormatter.java:1849)
|        at DateTimeFormatter.format (DateTimeFormatter.java:1823)
|        at (#94:1)

jshell> k.format(date)
|  Exception java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: ClockHourOfAmPm
|        at LocalDate.get0 (LocalDate.java:709)
|        at LocalDate.getLong (LocalDate.java:688)
|        at DateTimePrintContext.getValue (DateTimePrintContext.java:308)
|        at DateTimeFormatterBuilder$NumberPrinterParser.format (DateTimeFormatterBuilder.java:2763)
|        at DateTimeFormatterBuilder$CompositePrinterParser.format (DateTimeFormatterBuilder.java:2402)
|        at DateTimeFormatter.formatTo (DateTimeFormatter.java:1849)
|        at DateTimeFormatter.format (DateTimeFormatter.java:1823)
|        at (#95:1)

jshell> k.format(time)
$96 ==> "11:49"

jshell> DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM dd yyyy")
formatter ==> Value(MonthOfYear,2)' 'Value(DayOfMonth,2)' 'Value(YearOfEra,4,19,EXCEEDS_PAD)

jshell> LocalDate date = LocalDate.parse("01 02 2015",formatter)
date ==> 2015-01-02

jshell> LocalTime time = LocalTime.parse("11:22")
time ==> 11:22

jshell>
